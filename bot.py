import time
import requests
import threading
from datetime import datetime
import pytz

FIREBASE_URL = "https://bosstimer-2a778-default-rtdb.asia-southeast1.firebasedatabase.app/.json"
DISCORD_WEBHOOK_URL = "https://ptb.discord.com/api/webhooks/1382831229681930300/gFhSSjfKBamc9hFGBJ7KEZOEcSpPjBmV3h8t_o5n6pGfCsIWeGFhIZbGYtF9IDlQcZOW"
GUARDIAN_ROLE_ID = "1377155652480401499"  # Role ID ‡∏Ç‡∏≠‡∏á @guardian

notified_5_min = set()
notified_3_min = set()
last_death_record = {}

def fetch_boss_data(retries=3, delay=5):
    """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏™‡∏à‡∏≤‡∏Å Firebase ‡∏û‡∏£‡πâ‡∏≠‡∏° retry ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î"""
    for attempt in range(1, retries + 1):
        try:
            response = requests.get(FIREBASE_URL, timeout=10)
            if response.status_code == 200:
                data = response.json()
                if "bosses" in data:
                    return data["bosses"]
                else:
                    print("‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏™‡πÉ‡∏ô Firebase ‡πÑ‡∏°‡πà‡∏°‡∏µ key 'bosses'")
                    return {}
            else:
                print(f"‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ {response.status_code})")
        except Exception as e:
            print(f"‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e})")

        if attempt < retries:
            print(f"üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á (‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà {attempt + 1}) ‡∏´‡∏•‡∏±‡∏á {delay} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...")
            time.sleep(delay)

    print("‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏™‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡∏´‡∏•‡∏±‡∏á‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    return {}

def notify_discord(message):
    """‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Discord ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ó‡πá‡∏Å @guardian"""
    tagged_message = f"<@&{GUARDIAN_ROLE_ID}> {message}"  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡πá‡∏Å Role
    print(f"[‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Discord] {tagged_message}")
    try:
        response = requests.post(DISCORD_WEBHOOK_URL, json={"content": tagged_message}, timeout=10)
        if response.status_code != 204 and response.status_code != 200:
            print(f"‚ùå ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Discord ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ {response.status_code})")
    except Exception as e:
        print(f"‚ùå ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")

def format_owner(owner):
    """‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á ‡∏™‡πà‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°"""
    if owner and owner.strip():
        return f"\nüëë ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏™: **{owner.strip()}**"
    return ""

def process_boss(boss, info, now_ts):
    """‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ö‡∏≠‡∏™‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß"""
    cooldown = info.get("cooldown")
    last_death = info.get("lastDeath")
    owner = info.get("owner", "").strip() if info.get("owner") else ""

    if cooldown is None or last_death is None:
        print(f"‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏™ {boss} ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô (cooldown ‡∏´‡∏£‡∏∑‡∏≠ lastDeath ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ)")
        return

    try:
        cooldown_ms = float(cooldown) * 1000
        last_death = int(last_death)
    except Exception as e:
        print(f"‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏™ {boss} ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (cooldown ‡∏´‡∏£‡∏∑‡∏≠ lastDeath ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç): {e}")
        return

    spawn_time = las_
